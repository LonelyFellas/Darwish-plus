import{j as t}from"./jsx-runtime-DRTy3Uxn.js";import{c as v,T as h}from"./index-BgWAaTDi.js";import{r as u}from"./index-BBkUAzwr.js";import{H as D}from"./index-vsdhdNy5.js";import{h as a}from"./handleTypeView-iA29ZH8a.js";import"./colors-DwKSCBJm.js";import"./extends-CCbyfPlC.js";import"./index-DUqwVN8i.js";import"./objectWithoutPropertiesLoose-1QL-frMM.js";import"./isNativeReflectConstruct-DeZAPHXq.js";import"./index-DSpEmV5-.js";import"./iframe-D86rqt8C.js";import"../sb-preview/runtime.js";import"./index-B_J8iUie.js";import"./index-DboEQVPH.js";import"./index-DrFu-skq.js";import"./Table-9zVUbs5g.js";import"./useZIndex-C8tNrk2Z.js";var x=function(o,p,n){n===void 0&&(n=300);var e=typeof o=="function"?o():o,r=v({startTime:-1,spendTime:-1}),i=r[0],m=r[1],f=function(){e.props&&"onMouseDown"in e.props&&e.props.onMouseEnter(),m({startTime:new Date().getTime(),spendTime:0})},T=function(){e.props&&"onMouseUp"in e.props&&e.props.onMouseLeave(),m({spendTime:new Date().getTime()-i.startTime})};return u.useEffect(function(){i.spendTime>=n&&i.startTime===0&&(p(),m({spendTime:-1}))},[i.spendTime]),function(){return u.cloneElement(e,{onMouseDown:f,onMouseUp:T})}};const s=()=>{const[o,p]=u.useState(0),e=x(t.jsx("button",{children:t.jsxs("h1",{children:["Count: ",o]})}),()=>{p(r=>r+1)});return t.jsx("div",{children:t.jsx(e,{})})},I={title:"Hooks/usePress",component:s,tags:["autodocs"],parameters:{docs:{page:()=>t.jsx(D,{args:{description:"鼠标左键按压或者手指按压",beCare:"注意：⚠️鼠标右键按压也允许(可配置不允许)"},apiDescription:"React sensor hook that fires a callback after long pressing.",paramDs:{ds:[{name:"Element",type:a("React.JSX.Element | () => React.JSX.Element"),defaultValue:"",description:"需要检测的按压的元素"},{name:"PressCallback",type:a("() => void"),defaultValue:"",description:"按压后的回调函数"},{name:"pressTime",type:a("number"),defaultValue:"300",description:"计算规则按压的时间"}]},returnDs:{type:t.jsx(h,{children:"T"}),description:"该钩子的输入参数：",ds:[{name:"PressElement",type:a("React.JSX.Element"),description:"返回一个按压的元素"}]}})}}};s.__docgenInfo={description:"",methods:[],displayName:"Demo"};var c,d,l;s.parameters={...s.parameters,docs:{...(c=s.parameters)==null?void 0:c.docs,source:{originalSource:`() => {
  const [pressCount, setPressCount] = useState(0);
  const element = <button>
      <h1>Count: {pressCount}</h1>
    </button>;
  const PressView = usePress(element, () => {
    setPressCount(prev => prev + 1);
  });
  return <div>
      <PressView />
    </div>;
}`,...(l=(d=s.parameters)==null?void 0:d.docs)==null?void 0:l.source}}};const L=["Demo"];export{s as Demo,L as __namedExportsOrder,I as default};
